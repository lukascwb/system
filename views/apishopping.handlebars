<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Product Analysis Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
    <style>
        :root {
            --primary-color: #2c3e50;
            --secondary-color: #3498db;
            --success-color: #27ae60;
            --warning-color: #f39c12;
            --danger-color: #e74c3c;
            --light-bg: #f8f9fa;
            --dark-bg: #343a40;
        }

        body {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        .dashboard-header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 2rem;
            margin-bottom: 2rem;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .stats-card {
            background: white;
            border-radius: 12px;
            /*padding: 1.5rem;*/
            margin-bottom: 1rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }

        .stats-card:hover {
            transform: translateY(-5px);
        }

        .product-card {
            background: white;
            border-radius: 12px;
            margin-bottom: 2rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .product-card:hover {
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
            transform: translateY(-2px);
        }

        .product-header {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            padding: 1.5rem;
        }
        
        .stats-section {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 8px;
            padding: 1rem;
            backdrop-filter: blur(10px);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }
        
        .text-white-50 {
            color: rgba(255, 255, 255, 0.5) !important;
        }
        
        .text-white-75 {
            color: rgba(255, 255, 255, 0.75) !important;
        }

        .product-image {
            width: 250px;
            height: 250px;
            object-fit: cover;
            border-radius: 8px;
            transition: transform 0.2s ease;
            cursor: pointer;
        }

        .product-image:hover {
            transform: scale(1.05);
        }

        /* Clickable image functionality */
        .zoom {
            cursor: pointer;
            transition: transform 0.2s ease;
        }

        .zoom:hover {
            transform: scale(1.05);
        }

        /* Modal styles */
        .image-modal {
            display: none;
            position: fixed;
            z-index: 999999;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
            backdrop-filter: blur(5px);
        }

        .image-modal-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            max-width: 90%;
            max-height: 90%;
            border-radius: 10px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.5);
        }

        .image-modal img {
            width: 100%;
            height: 100%;
            object-fit: contain;
            border-radius: 10px;
        }

        .image-modal-close {
            position: absolute;
            top: 15px;
            right: 20px;
            color: white;
            font-size: 30px;
            font-weight: bold;
            cursor: pointer;
            background: rgba(0, 0, 0, 0.5);
            border-radius: 50%;
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: background 0.3s ease;
        }

        .image-modal-close:hover {
            background: rgba(0, 0, 0, 0.8);
        }

        .shopping-results {
            background: var(--light-bg);
            /*padding: 1.5rem;*/
            border-radius: 0 0 12px 12px;
            overflow: visible;
        }

        .result-card {
            background: white;
            border-radius: 12px;
            padding: 1rem;
            margin-bottom: 1rem;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
            height: 100%;
            display: flex;
            flex-direction: column;
            position: relative;
            overflow: hidden;
        }

        .result-card:hover {
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
            transform: translateY(-2px);
        }

        .result-card.approved {
            border-left: 4px solid var(--success-color);
        }

        .result-card.rejected {
            border-left: 4px solid var(--danger-color);
        }

        .result-card.roi-rejected {
            border-left: 4px solid var(--warning-color);
        }

        /* New card layout styles */
        .card-header-section {
            display: flex;
            align-items: flex-start;
            gap: 0.75rem;
         
        }

        .card-image-container {
            flex-shrink: 0;
            width: 70px;
            height: 70px;
            border-radius: 8px;
            overflow: hidden;
            background: #f8f9fa;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .card-image-container img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .card-badges {
            display: flex;
            flex-direction: column;
            gap: 0.25rem;
            flex-shrink: 0;
        }

        .badge-group {
            display: flex;
            flex-direction: column;
            gap: 0.25rem;
            flex-shrink: 0;
        }

        .card-title-section {
            flex: 1;
            min-width: 0;
        }

        .badges-container {
            display: flex;
            gap: 0.5rem;
            margin-top: 0.5rem;
        }

        .badge-column {
            flex: 1;
            display: flex;
            flex-direction: column;
            gap: 0.25rem;
        }

        .card-title {
            font-size: 0.85rem;
            font-weight: 600;
            line-height: 1.3;
            color: #2c3e50;
            margin: 0 0 0.5rem 0;
            display: -webkit-box;
            -webkit-line-clamp: 3;
            -webkit-box-orient: vertical;
            overflow: hidden;
            text-overflow: ellipsis;
        }


        .card-title-link {
            color: #2c3e50;
            text-decoration: none;
            transition: color 0.3s ease;
        }

        .card-title-link:hover {
            color: #3498db;
            text-decoration: none;
        }


        .badge {
            font-size: 0.8rem;
            padding: 0.4rem 0.6rem;
        }

        .badge.bg-danger {
            background-color: rgb(199, 137, 143) !important;
        }

        .pagination {
            justify-content: center;
            margin-top: 2rem;
            list-style: none;
            padding: 0;
        }

        .pagination .page-item {
            display: inline-block;
            margin: 0 0.2rem;
        }

        .pagination .page-link {
            background: rgba(255, 255, 255, 0.9);
            border: 1px solid #dee2e6;
            color: var(--primary-color);
            border-radius: 8px;
            transition: all 0.3s ease;
            padding: 0.75rem 1rem;
            text-decoration: none;
            display: block;
            min-width: 40px;
            text-align: center;
            font-weight: 500;
        }

        .pagination .page-link:hover {
            background: var(--secondary-color);
            color: white;
            transform: translateY(-2px);
            text-decoration: none;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .pagination .page-item.active .page-link {
            background: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }

        .pagination .page-item.disabled .page-link {
            background: #f8f9fa;
            color: #6c757d;
            border-color: #dee2e6;
            cursor: not-allowed;
            opacity: 0.6;
        }

        .loading-spinner {
            text-align: center;
            padding: 2rem;
        }

        .search-filters {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 1.5rem;
            margin-bottom: 2rem;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }

        .btn-outline-light:hover {
            background-color: rgba(255, 255, 255, 0.2);
            border-color: rgba(255, 255, 255, 0.3);
        }
        
         /* Responsive card layout using Flexbox */
         .shopping-results .row {
             display: flex;
             flex-wrap: wrap;
             gap: 1rem;
             align-items: stretch;
         }
         
         .api-result-item {
             flex: 1 1 320px;
             min-width: 300px;
             max-width: 350px;
             transition: all 0.3s ease;
         }
         
         .api-result-item.hidden {
             display: none !important;
         }
         
         /* Responsive flex basis */
         @media (min-width: 576px) {
             .api-result-item {
                 flex: 1 1 300px;
                 min-width: 280px;
             }
         }
         
         @media (min-width: 768px) {
             .api-result-item {
                 flex: 1 1 280px;
                 min-width: 260px;
             }
         }
         
         @media (min-width: 992px) {
             .api-result-item {
                 flex: 1 1 260px;
                 min-width: 240px;
             }
         }
         
         @media (min-width: 1200px) {
             .api-result-item {
                 flex: 1 1 240px;
                 min-width: 220px;
             }
         }

         /* Mobile-specific improvements */
         @media (max-width: 575px) {
             .api-result-item {
                 flex: 1 1 100%;
                 min-width: 100%;
                 max-width: 100%;
             }
             
             .card-header-section {
                 gap: 0.5rem;
             }
             
             .card-image-container {
                 width: 60px;
                 height: 60px;
             }
             
             .card-title {
                 font-size: 0.8rem;
                 -webkit-line-clamp: 2;
             }
             
             .card-title-link {
                 font-size: 0.8rem;
             }
             
             .badges-container {
                 gap: 0.25rem;
             }
             
             .badge-column .badge {
                 font-size: 0.6rem;
                 padding: 0.2rem 0.3rem;
             }
         }

         /* Tablet improvements */
         @media (min-width: 576px) and (max-width: 991px) {
             .api-result-item {
                 flex: 1 1 45%;
                 min-width: 280px;
             }
         }
    </style>
</head>
<body>
    <div class="container-fluid py-4">
        <!-- Dashboard Header -->
        <div class="dashboard-header">
            <div class="row align-items-center">
                <div class="col-md-8">
                    <h1 class="mb-0">
                        <i class="fas fa-chart-line text-primary me-2"></i>
                        Product Analysis Dashboard
                    </h1>
                    <p class="text-muted mb-0 mt-2">Analyze product performance and market opportunities</p>
                    
                                         <!-- Status Bar -->
                     <div class="mt-3 p-2 bg-light rounded">
                         <div class="row text-center">
                             <div class="col-md-3">
                                 <small class="text-muted">Page</small>
                                 <div class="fw-bold text-primary">{{currentPage}} / {{totalPages}}</div>
                             </div>
                             <div class="col-md-3">
                                 <small class="text-muted">Total Products</small>
                                 <div class="fw-bold text-success">{{totalKeepaProducts}}</div>
                             </div>
                             <div class="col-md-3">
                                 <small class="text-muted">Items Found</small>
                                 <div class="fw-bold text-warning" id="itemsFoundCount">Calculating...</div>
                             </div>
                             <div class="col-md-3">
                                 <small class="text-muted">Load Time</small>
                                 <div class="fw-bold text-info" id="loadTime">Calculating...</div>
                             </div>
                         </div>
                     </div>
                </div>
                <div class="col-md-4 text-end">
                    <div class="d-flex justify-content-end gap-2">
                        <button class="btn btn-outline-primary" onclick="exportData()">
                            <i class="fas fa-download me-1"></i>Export Data
                        </button>
                        <button class="btn btn-outline-secondary" onclick="clearFilters()">
                            <i class="fas fa-filter me-1"></i>Clear Filters
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <!-- Search and Filters -->
        <div class="search-filters">
            <div class="row">
                <div class="col-md-4">
                    <label for="searchInput" class="form-label">Search Products</label>
                    <input type="text" class="form-control" id="searchInput" placeholder="Search by product title..." onkeyup="filterProducts()">
                </div>
                                 <div class="col-md-3">
                     <label for="titleMatchFilter" class="form-label">Title Match</label>
                     <select class="form-select" id="titleMatchFilter" onchange="filterProducts()">
                         <option value="5" selected>+5 (Fair Match)</option>
                         <option value="">All Matches</option>
                     </select>
                 </div>
                                   <div class="col-md-3">
                      <label for="itemsFoundFilter" class="form-label">Items Found</label>
                      <select class="form-select" id="itemsFoundFilter" onchange="handleItemsFoundChange()">
                          
                          <option value="1" selected>+1 (Has Results)</option>
                          <option value="0">0 (No Results)</option>
                      </select>
                  </div>
                <div class="col-md-2">
                    <label class="form-label">&nbsp;</label>
                    <button class="btn btn-primary w-100" onclick="filterProducts()">
                        <i class="fas fa-search me-1"></i>Filter
                    </button>
                </div>
            </div>
        </div>

        <!-- Products Container -->
        <div id="productsContainer">
            {{#each tblKeepa}}
            <div class="product-card">
                <!-- Product Header -->
                <div class="product-header">
                    <div class="row align-items-start">
                        <div class="col-md-2 text-center">
                            <img src="{{Image}}" alt="{{Title}}" class="product-image zoom">
                        </div>
                        <div class="col-md-10">
                            <h5 class="mb-3">
                                <a href="{{'URL: Amazon'}}" target="_blank" class="text-white text-decoration-none">
                                    {{Title}}
                                </a>
                            </h5>
                            
                            <div class="mb-3">
                                <a href="{{html_url}}" target="_blank" class="btn btn-outline-light btn-sm">
                                    <i class="fas fa-search me-1"></i>Search API Google Shopping
                                </a>
                            </div>
                            
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="stats-section">
                                        <h6 class="text-white-50 mb-2 d-flex justify-content-between align-items-center">
                                            <span>Amazon Prices</span>
                                            <small class="text-white-75">Avg: {{'New: Average'}}</small>
                                        </h6>
                                        <div class="d-flex justify-content-between mb-1">
                                            <span class="text-white-75">Current:</span>
                                            <strong class="text-white">{{'New: Current'}}</strong>
                                        </div>
                                        <div class="d-flex justify-content-between mb-1">
                                            <span class="text-white-75">30D Avg:</span>
                                            <strong class="text-white">{{'New: 30 days avg.'}}</strong>
                                        </div>
                                        <div class="d-flex justify-content-between">
                                            <span class="text-white-75">180D Avg:</span>
                                            <strong class="text-white">{{'New: 180 days avg.'}}</strong>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="col-md-3">
                                    <div class="stats-section">
                                        <h6 class="text-white-50 mb-2 d-flex justify-content-between align-items-center">
                                            <span>Buy Box</span>
                                            <small class="text-white-75">Avg: {{'Buy Box: Average'}}</small>
                                        </h6>
                                        <div class="d-flex justify-content-between mb-1">
                                            <span class="text-white-75">Current:</span>
                                            <strong class="text-white">{{'Buy Box: Current'}}</strong>
                                        </div>
                                        <div class="d-flex justify-content-between mb-1">
                                            <span class="text-white-75">90D Avg:</span>
                                            <strong class="text-white">{{'Buy Box: 90 days avg.'}}</strong>
                                        </div>
                                        <div class="d-flex justify-content-between">
                                            <span class="text-white-75">Amazon %:</span>
                                            <strong class="text-white">{{'Buy Box: % Amazon 365 days'}}</strong>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="col-md-3">
                                    <div class="stats-section">
                                        <h6 class="text-white-50 mb-2">Sales Rank</h6>
                                        <div class="d-flex justify-content-between mb-1">
                                            <span class="text-white-75">Current:</span>
                                            <strong class="text-white">{{'Sales Rank: Current'}}</strong>
                                        </div>
                                        <div class="d-flex justify-content-between mb-1">
                                            <span class="text-white-75">30D Avg:</span>
                                            <strong class="text-white">{{'Sales Rank: 30 days avg.'}}</strong>
                                        </div>
                                        <div class="d-flex justify-content-between">
                                            <span class="text-white-75">180D Avg:</span>
                                            <strong class="text-white">{{'Sales Rank: 180 days avg.'}}</strong>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="col-md-3">
                                    <div class="stats-section">
                                        <h6 class="text-white-50 mb-2">Reviews & Performance</h6>
                                        <div class="d-flex justify-content-between mb-1">
                                            <span class="text-white-75">Review Count:</span>
                                            <strong class="text-white">{{lookup . 'Reviews: Review Count - Format Specific'}}</strong>
                                        </div>
                                        <div class="d-flex justify-content-between mb-1">
                                            <span class="text-white-75">Bought Past Month:</span>
                                            <strong class="text-white">{{formatNumber (lookup . 'Bought in past month')}}</strong>
                                        </div>
                                        <div class="d-flex justify-content-between mb-1">
                                            <span class="text-white-75">Item Weight:</span>
                                            <strong class="text-white">{{lookup . 'Item: Weight (g)'}}</strong>
                                        </div>
                                        <div class="d-flex justify-content-between">
                                            <span class="text-white-75">Variations:</span>
                                            <strong class="text-white">{{lookup . 'Variation Count'}}</strong>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Shopping Results -->
                <div class="shopping-results">
                    <div class="row">
                        {{#if productsAPI}}
                        {{#each productsAPI}}
                        <div class="api-result-item">
                            <div class="result-card {{#if (eq geminiStatus 'Aprovado')}}approved{{else if (eq geminiReason 'Preço muito alto')}}roi-rejected{{else}}rejected{{/if}}"
                                 data-seller="{{seller}}" data-status="{{geminiStatus}}">
                                
                                <!-- Card Header Section -->
                                <div class="card-header-section">
                                    <!-- Product Image -->
                                    <div class="card-image-container">
                                        <img src="{{thumbnail}}" alt="{{title}}" class="zoom">
                                    </div>
                                    
                                    <!-- Title Section -->
                                    <div class="card-title-section">
                                        <h6 class="card-title">
                                            <a href="{{link}}" target="_blank" class="card-title-link">{{title}}</a>
                                        </h6>
                                        
                                        <!-- Badges Container -->
                                        <div class="badges-container">
                                            <!-- Left Column -->
                                            <div class="badge-column">
                                                <!-- AI Response Status -->
                                                {{#if (eq geminiStatus 'Aprovado')}}
                                                    <span class="badge bg-success" style="font-size: 0.65rem; padding: 0.25rem 0.4rem;">
                                                        <i class="fas fa-check me-1"></i>OK
                                                    </span>
                                                {{else}}
                                                    <span class="badge bg-danger" style="background-color: rgb(199, 137, 143) !important; font-size: 0.65rem; padding: 0.25rem 0.4rem;">
                                                        <i class="fas fa-times me-1"></i>{{geminiReason}}
                                                    </span>
                                                {{/if}}
                                                
                                                <!-- Title Match -->
                                                {{#with (titleSimilarity ../Title title)}}
                                                <span class="badge {{#if (gte this 8)}}bg-success{{else if (gte this 6)}}bg-warning{{else}}bg-danger{{/if}}" style="font-size: 0.65rem; padding: 0.25rem 0.4rem;">
                                                    <i class="fas fa-link me-1"></i>{{this}}/10
                                                </span>
                                                {{/with}}
                                            </div>
                                            
                                            <!-- Right Column -->
                                            <div class="badge-column">
                                                <!-- Price Badge -->
                                                <span class="badge bg-primary" style="font-size: 0.65rem; padding: 0.25rem 0.4rem;">
                                                    <i class="fas fa-dollar-sign me-1"></i>{{price}}
                                                </span>
                                                
                                                <!-- Profit Badge -->
                                                {{#if price}}
                                                {{#with (calculateProfitability ../ price)}}
                                                <span class="badge {{#if isProfitable}}bg-success{{else}}bg-danger{{/if}}" style="font-size: 0.65rem; padding: 0.25rem 0.4rem;">
                                                    <i class="fas {{#if isProfitable}}fa-arrow-up{{else}}fa-arrow-down{{/if}} me-1"></i>
                                                    ${{profit}}
                                                </span>
                                                {{/with}}
                                                {{/if}}
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        {{/each}}
                        {{else}}
                            <div class="col-12">
                                <div class="alert alert-info text-center">
                                    <i class="fas fa-info-circle me-2"></i>
                                    No API products found for this Keepa item.
                                </div>
                            </div>
                        {{/if}}
                    </div>
                </div>
            </div>
            {{/each}}
        </div>

        <!-- Pagination -->
        <nav aria-label="Product pagination">
            <ul class="pagination pagination-lg">
                {{#if (gt currentPage 1)}}
                <li class="page-item">
                    <a class="page-link" href="/api/page/{{dec currentPage}}?keepa_id={{keepa_id}}">
                        <i class="fas fa-chevron-left"></i> Previous
                    </a>
                </li>
                {{/if}}
                
                {{#if (gte currentPage 3)}}
                <li class="page-item">
                    <a class="page-link" href="/api/page/1?keepa_id={{keepa_id}}">1</a>
                </li>
                {{/if}}
                
                {{#if (gte currentPage 4)}}
                <li class="page-item">
                    <span class="page-link">...</span>
                </li>
                {{/if}}
                
                {{#if (gte currentPage 2)}}
                <li class="page-item">
                    <a class="page-link" href="/api/page/{{dec currentPage}}?keepa_id={{keepa_id}}">{{dec currentPage}}</a>
                </li>
                {{/if}}
                
                <li class="page-item active">
                    <a class="page-link" href="/api/page/{{currentPage}}?keepa_id={{keepa_id}}">{{currentPage}}</a>
                </li>
                
                {{#if (lt currentPage totalPages)}}
                <li class="page-item">
                    <a class="page-link" href="/api/page/{{inc currentPage}}?keepa_id={{keepa_id}}">{{inc currentPage}}</a>
                </li>
                {{/if}}
                
                {{#if (lte currentPage (dec totalPages 2))}}
                <li class="page-item">
                    <span class="page-link">...</span>
                </li>
                {{/if}}
                
                {{#if (lte currentPage (dec totalPages 1))}}
                <li class="page-item">
                    <a class="page-link" href="/api/page/{{totalPages}}?keepa_id={{keepa_id}}">{{totalPages}}</a>
                </li>
                {{/if}}
                
                {{#if (lt currentPage totalPages)}}
                <li class="page-item">
                    <a class="page-link" href="/api/page/{{inc currentPage}}?keepa_id={{keepa_id}}">
                        Next <i class="fas fa-chevron-right"></i>
                    </a>
                </li>
                {{/if}}
            </ul>
        </nav>
    </div>

    <!-- Image Modal -->
    <div id="imageModal" class="image-modal">
        <div class="image-modal-content">
            <span class="image-modal-close">&times;</span>
            <img id="modalImage" src="" alt="">
        </div>
    </div>

    <!-- Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
                 // Handle Items Found filter change
         function handleItemsFoundChange() {
             const itemsFoundFilter = document.getElementById('itemsFoundFilter').value;
             const titleMatchFilter = document.getElementById('titleMatchFilter');
             
             // If Items Found is set to "0 (No Results)", automatically set Title Match to "All Matches"
             if (itemsFoundFilter === '0') {
                 titleMatchFilter.value = '';
             } else if (itemsFoundFilter === '1') {
                 // If switching back to "+1 (Has Results)", set Title Match back to default "+5 (Fair Match)"
                 titleMatchFilter.value = '5';
             }
             
             // Apply the filters
             filterProducts();
         }
         
         // Calculate and display Items Found count
         function calculateItemsFound() {
             const productCards = document.querySelectorAll('.product-card');
             let keepaTitlesWithResults = 0;
             let totalKeepaProducts = 0;
             
             productCards.forEach(card => {
                 // Only count visible cards (not hidden by filters)
                 if (card.style.display !== 'none') {
                     const resultCards = card.querySelectorAll('.result-card');
                     // Count this Keepa title if it has at least 1 visible API result
                     let hasVisibleResults = false;
                     resultCards.forEach(resultCard => {
                         if (resultCard.style.display !== 'none') {
                             hasVisibleResults = true;
                         }
                     });
                     
                     if (hasVisibleResults) {
                         keepaTitlesWithResults++;
                     }
                     totalKeepaProducts++;
                 }
             });
             
             const itemsFoundElement = document.getElementById('itemsFoundCount');
             if (itemsFoundElement) {
                 itemsFoundElement.textContent = `${keepaTitlesWithResults} / ${totalKeepaProducts}`;
             }
         }
         
         // Search and Filter Functionality
         function filterProducts() {
             const searchTerm = document.getElementById('searchInput').value.toLowerCase();
             const titleMatchFilter = document.getElementById('titleMatchFilter').value;
             const itemsFoundFilter = document.getElementById('itemsFoundFilter').value;
             
             const productCards = document.querySelectorAll('.product-card');
             
             productCards.forEach(card => {
                 const title = card.querySelector('h5').textContent.toLowerCase();
                 const resultCards = card.querySelectorAll('.result-card');
                 const noResultsMessage = card.querySelector('.alert-info');
                 
                 // Check if product has API results
                 const hasApiResults = resultCards.length > 0;
                 const itemsFoundCount = hasApiResults ? resultCards.length : 0;
                 
                                                     // Apply filters
                  let showCard = true;
                  
                  // Search filter
                  if (searchTerm && !title.toLowerCase().includes(searchTerm)) {
                      showCard = false;
                  }
                  
                  // Items Found filter
                  if (itemsFoundFilter === '1' && itemsFoundCount === 0) {
                      showCard = false;
                  } else if (itemsFoundFilter === '0' && itemsFoundCount > 0) {
                      showCard = false;
                  }
                  
                  // Show/hide the card based on search and items found filters
                  card.style.display = showCard ? 'block' : 'none';
                  
                                     // Title Match filter - Check if any results meet the criteria
                   let hasAnyVisibleResults = false;
                   
                   if (titleMatchFilter === '5') {
                       resultCards.forEach(resultCard => {
                           const titleMatchBadges = resultCard.querySelectorAll('.badge');
                           let hasGoodScore = false;
                           
                           titleMatchBadges.forEach(badge => {
                               const matchText = badge.textContent;
                               const match = matchText.match(/(\d+)\s*\/\s*10/);
                               if (match) {
                                   const matchScore = parseInt(match[1]);
                                   if (matchScore >= 5) {
                                       hasGoodScore = true;
                                   }
                               }
                           });
                           
                           // Hide individual result cards with scores below 5
                           if (!hasGoodScore) {
                               resultCard.style.display = 'none';
                               resultCard.style.visibility = 'hidden';
                               resultCard.style.position = 'absolute';
                               // Hide the parent container
                               const parentItem = resultCard.closest('.api-result-item');
                               if (parentItem) {
                                   parentItem.classList.add('hidden');
                               }
                           } else {
                               resultCard.style.display = 'block';
                               resultCard.style.visibility = 'visible';
                               resultCard.style.position = 'relative';
                               // Show the parent container
                               const parentItem = resultCard.closest('.api-result-item');
                               if (parentItem) {
                                   parentItem.classList.remove('hidden');
                               }
                               hasAnyVisibleResults = true;
                           }
                       });
                   } else if (titleMatchFilter === '0') {
                       resultCards.forEach(resultCard => {
                           const titleMatchBadges = resultCard.querySelectorAll('.badge');
                           let hasZeroScore = false;
                           
                           titleMatchBadges.forEach(badge => {
                               const matchText = badge.textContent;
                               const match = matchText.match(/(\d+)\s*\/\s*10/);
                               if (match) {
                                   const matchScore = parseInt(match[1]);
                                   if (matchScore === 0) {
                                       hasZeroScore = true;
                                   }
                               }
                           });
                           
                           // Show only result cards with score 0
                           if (hasZeroScore) {
                               resultCard.style.display = 'block';
                               resultCard.style.visibility = 'visible';
                               resultCard.style.position = 'relative';
                               // Show the parent container
                               const parentItem = resultCard.closest('.api-result-item');
                               if (parentItem) {
                                   parentItem.classList.remove('hidden');
                               }
                               hasAnyVisibleResults = true;
                           } else {
                               resultCard.style.display = 'none';
                               resultCard.style.visibility = 'hidden';
                               resultCard.style.position = 'absolute';
                               // Hide the parent container
                               const parentItem = resultCard.closest('.api-result-item');
                               if (parentItem) {
                                   parentItem.classList.add('hidden');
                               }
                           }
                       });
                   } else {
                       // Show all result cards when filter is "All Matches"
                       resultCards.forEach(resultCard => {
                           resultCard.style.display = 'block';
                           resultCard.style.visibility = 'visible';
                           resultCard.style.position = 'relative';
                           // Show the parent container
                           const parentItem = resultCard.closest('.api-result-item');
                           if (parentItem) {
                               parentItem.classList.remove('hidden');
                           }
                           hasAnyVisibleResults = true;
                       });
                   }
                   
                   // If no results are visible and we're filtering by title match, hide the entire card
                   if (titleMatchFilter === '5' && !hasAnyVisibleResults && hasApiResults) {
                       card.style.display = 'none';
                   }
             });
             
             // Recalculate Items Found count after filtering
             calculateItemsFound();
         }

                 function clearFilters() {
             document.getElementById('searchInput').value = '';
             document.getElementById('titleMatchFilter').value = '';
             document.getElementById('itemsFoundFilter').value = '';
             filterProducts();
         }

        // Export functionality
        function exportData() {
            const data = [];
            document.querySelectorAll('.product-card').forEach(card => {
                const title = card.querySelector('h5').textContent;
                const price = card.querySelector('.price-profitable').textContent;
                const results = Array.from(card.querySelectorAll('.result-card')).map(result => ({
                    seller: result.dataset.seller,
                    status: result.dataset.status,
                    price: result.querySelector('.badge').textContent
                }));
                
                data.push({ title, price, results });
            });
            
            const csv = convertToCSV(data);
            downloadCSV(csv, 'product-analysis.csv');
        }

        function convertToCSV(data) {
            const headers = ['Product Title', 'Amazon Price', 'Seller', 'Status', 'Price'];
            const rows = data.map(item => 
                item.results.map(result => [
                    item.title,
                    item.price,
                    result.seller,
                    result.status,
                    result.price
                ])
            ).flat();
            
            return [headers, ...rows].map(row => row.join(',')).join('\n');
        }

        function downloadCSV(csv, filename) {
            const blob = new Blob([csv], { type: 'text/csv' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = filename;
            a.click();
            window.URL.revokeObjectURL(url);
        }

                 // Image Modal functionality
         function openImageModal(imageSrc, imageAlt) {
             const modal = document.getElementById('imageModal');
             const modalImage = document.getElementById('modalImage');
             modalImage.src = imageSrc;
             modalImage.alt = imageAlt;
             modal.style.display = 'block';
             document.body.style.overflow = 'hidden'; // Prevent background scrolling
         }

         function closeImageModal() {
             const modal = document.getElementById('imageModal');
             modal.style.display = 'none';
             document.body.style.overflow = 'auto'; // Restore scrolling
         }

         // Initialize tooltips
         document.addEventListener('DOMContentLoaded', function() {
             const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
             tooltipTriggerList.map(function (tooltipTriggerEl) {
                 return new bootstrap.Tooltip(tooltipTriggerEl);
             });
             
             // Calculate and display load time in seconds
             const loadTimeElement = document.getElementById('loadTime');
             if (loadTimeElement) {
                 const loadTime = performance.now();
                 const loadTimeSeconds = (loadTime / 1000).toFixed(2);
                 loadTimeElement.textContent = loadTimeSeconds + 's';
             }
             
                           // Calculate and display Items Found count
              calculateItemsFound();
              
              // Apply default filter (Title Match 5+)
              filterProducts();

              // Add click event listeners to all zoom images
              document.querySelectorAll('.zoom').forEach(function(img) {
                  img.addEventListener('click', function() {
                      openImageModal(this.src, this.alt);
                  });
              });

              // Close modal when clicking the X button
              document.querySelector('.image-modal-close').addEventListener('click', closeImageModal);

              // Close modal when clicking outside the image
              document.getElementById('imageModal').addEventListener('click', function(e) {
                  if (e.target === this) {
                      closeImageModal();
                  }
              });

              // Close modal with Escape key
              document.addEventListener('keydown', function(e) {
                  if (e.key === 'Escape') {
                      closeImageModal();
                  }
              });
         });
    </script>
</body>
</html></html>
